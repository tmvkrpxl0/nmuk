plugins {
    id 'dev.architectury.loom' version '1.6-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    version = "${project.mod_version}+mc${project.minecraft_version}"
    group = project.maven_group
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    base {
        archivesName = rootProject.archives_base_name
    }

    repositories {
        maven {
            name "Siphalor's Maven"
            url "https://maven.siphalor.de"
        }
        maven { url "https://jitpack.io" }
        mavenLocal()
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings "net.fabricmc:yarn:$rootProject.yarn_mappings:v2"
    }

    java {
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    processResources {
        def substitutions = [
                "mod_id": mod_id,
                "mod_version": mod_version,
                "mod_name": mod_name,
                "mod_authors": mod_authors,
                "mod_description": mod_description,
                "forge_version": forge_version,
                "minecraft_version_range": minecraft_version_range
        ]
        inputs.properties(substitutions)

        filesMatching(['fabric.mod.json', 'META-INF/mods.toml', 'pack.mcmeta']) {
            expand(substitutions)
        }
    }
}

/*

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}*/


// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}
